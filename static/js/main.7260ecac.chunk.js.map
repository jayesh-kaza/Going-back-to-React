{"version":3,"sources":["components/header/pokedex-icon.jpg","components/header/header.component.jsx","components/search-box/search-box.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/content/content.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","pokedex_logo","alt","SearchBox","props","type","placeholder","onChange","handleChange","Card","pokemon","name","style","alignSelf","id","CardList","pokemon_list","map","key","Content","updateSearchTerm","e","setState","searchTerm","target","value","filterPokemon","filter","toLowerCase","includes","state","this","filtered_pokemon","Component","App","updatePokemonList","data","current_list","push","sort","a","b","updatePageState","new_page_state","page_state","fetchPokemon","i","j","fetch","then","response","json","window","addEventListener","innerHeight","scrollY","document","body","offsetHeight","console","log","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7260ecac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokedex-icon.46b5c7c1.jpg\";","import React from \"react\";\r\nimport \"./header.styles.css\";\r\nimport pokedex_logo from './pokedex-icon.jpg'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <img src={pokedex_logo} alt=\"pokedex logo\" className=\"photo\" />\r\n      <h1>Pokedex</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = (props) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder=\"Search Pokemon\"\r\n      onChange={props.handleChange}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt={props.pokemon.name}\r\n        className=\"photo\"\r\n        style={{ alignSelf: \"center\" }}\r\n        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${props.pokemon.id}.png`}\r\n      />\r\n      <h2>{props.pokemon.name}</h2>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.pokemon_list.map((pokemon) => (\r\n        <Card key={pokemon.id} pokemon={pokemon} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { SearchBox } from \"../search-box/search-box.component\";\r\nimport { CardList } from \"../card-list/card-list.component\";\r\n\r\nclass Content extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.state = {\r\n      pokemon_list: props.pokemon_list,\r\n      searchTerm: \"\",\r\n    };\r\n  }\r\n\r\n  updateSearchTerm = (e) => this.setState({ searchTerm: e.target.value });\r\n\r\n  filterPokemon = (pokemon_list, searchTerm) => {\r\n    return pokemon_list.filter((pokemon) =>\r\n      pokemon.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { pokemon_list, searchTerm } = this.state;\r\n    const filtered_pokemon = this.filterPokemon(pokemon_list, searchTerm);\r\n    return (\r\n      <div>\r\n        <SearchBox handleChange={this.updateSearchTerm} />\r\n        <CardList pokemon_list={filtered_pokemon} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Header } from \"./components/header/header.component\";\nimport Content from \"./components/content/content.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      page_state: 1,\n      pokemon_list: [],\n    };\n  }\n\n  updatePokemonList = (data) => {\n    if (data) {\n      var current_list = this.state.pokemon_list;\n      current_list.push(data);\n      current_list.sort((a, b) => a.id - b.id);\n      this.setState({ pokemon_list: current_list });\n    }\n  };\n\n  updatePageState = (new_page_state) => {\n    this.setState({ page_state: new_page_state });\n  };\n\n  fetchPokemon = (i) => {\n    for (var j = i; j - i < 10; j++) {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${j}/`)\n        .then((response) => response.json())\n        .then((data) => {\n          this.updatePokemonList(data);\n        });\n    }\n    this.updatePageState(j);\n  };\n\n  componentDidMount() {\n    window.addEventListener(\n      \"scroll\",\n      this.fetchPokemon(this.state.page_state),\n      true\n    );\n  }\n\n  componentWillMount() {\n    window.addEventListener(\"scroll\", () => {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n        console.log(\"Fetching more pokemon...\");\n        this.fetchPokemon(this.state.page_state);\n      }\n    });\n  }\n\n  render() {\n    const { pokemon_list } = this.state;\n    return (\n      <div className=\"App\">\n        <Header />\n        <Content pokemon_list={pokemon_list} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}